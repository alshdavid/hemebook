name: Release

env:
  PROJECT_NAME: "hemebook"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "main"

jobs:
  build_client:
    name: "ðŸ”¨ Build Client"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: source ./.github/install-scripts/nodejs.bash
      - run: npm install
      - run: cd packages/hemebook-client && npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: packages-client
          path: ${{ github.workspace }}/packages/**/*
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 1

  build_server:
    name: "ðŸ”¨ Build Server"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: source ./.github/install-scripts/nodejs.bash
      - run: npm install
      - run: cd packages/hemebook-server && npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: packages-server
          path: ${{ github.workspace }}/packages/**/*
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 1

  deploy:
    name: "ðŸŽ¢ Deploy to AWS"
    runs-on: ubuntu-latest
    needs: [build_client, build_server]
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_google_client_id: ${{ secrets.TF_VAR_google_client_id }}
      TF_VAR_google_client_secret: ${{ secrets.TF_VAR_google_client_secret }}
      AWS_DEFAULT_REGION: ap-southeast-2
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { path: packages }
      - run: source ./.github/install-scripts/terraform.bash
      - uses: actions/download-artifact@v4
        with:
          pattern: packages-*
          path: packages
          merge-multiple: true
      - run: cd terraform && terraform init -upgrade
      - run: cd terraform && terraform validate
      - run: cd terraform && terraform apply --auto-approve
